# File: .github/workflows/retrain-and-deploy.yml
name: Retrain and Deploy Model

on:
  schedule:
    - cron: "0 5 * * 1" # Every Monday at 05:00 UTC
  workflow_dispatch:      # Manual trigger available via GitHub UI

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  retrain-and-deploy:
    name: Weekly Model Retraining & Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: üß© Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Set Up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîê Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ‚òÅÔ∏è Install Azure ML CLI
        run: |
          az extension add -n ml --yes || az extension update -n ml
          az configure --defaults workspace=mlops-scotia-ws2 group=mlops-rg

      - name: üß† Retrain Model
        run: |
          echo "Starting model retraining..."
          python src/train.py \
            --features data/features/feat_v1.parquet \
            --output_dir models/run_local

      - name: üóÇÔ∏è Register Model in Azure ML
        run: |
          az ml model create \
            --name fraud-detection-model \
            --path models/run_local/model.joblib \
            --workspace-name mlops-scotia-ws2 \
            --resource-group mlops-rg

      - name: üöÄ Redeploy Model Endpoint
        run: |
          az ml online-deployment update \
            --name fraud-deployment \
            --endpoint-name scotia-fraud-detection-endpoint \
            --workspace-name mlops-scotia-ws2 \
            --resource-group mlops-rg \
            --file deployment.yml

      - name: üß™ Smoke Test Endpoint
        run: |
          echo "Running post-deployment health check..."
          if [ -z "${{ secrets.SCORING_URI }}" ]; then
            echo "‚ùå SCORING_URI secret not set."
            exit 1
          fi
          if [ -z "${{ secrets.AZURE_API_KEY }}" ]; then
            echo "‚ùå AZURE_API_KEY secret not set."
            exit 1
          fi
          curl -X POST "${{ secrets.SCORING_URI }}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.AZURE_API_KEY }}" \
            -d '{"sample_input": "test"}' \
            --fail

      - name: üì§ Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: retrain-deploy-logs
          path: models/run_local/

      - name: ‚úÖ Notify Success
        if: success()
        run: echo "‚úÖ Model retraining and deployment completed successfully."

      - name: ‚ö†Ô∏è Notify Failure
        if: failure()
        run: echo "‚ùå Retrain or deployment failed. Please check workflow logs."
